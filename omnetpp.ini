[General]
network = EdgeEnv
sim-time-limit = 300s
repeat = 1
seed-set = ${repetition}
#cpu-time-limit = 600s
EdgeEnv.edgeServer[1..24].numUsers = 1
EdgeEnv.edgeServer[0].numUsers = ${numUsers = 100..500 step 100}
EdgeEnv.edgeServer[*].users[*].interArrivalTime = exponential(0.1)        # s
EdgeEnv.edgeServer[*].users[*].minRequiredCPUCycle = 25                   # MCycle
EdgeEnv.edgeServer[*].users[*].maxRequiredCPUCycle = 100                  # MCycle
EdgeEnv.edgeServer[*].users[*].taskSizeMultiple = 20
EdgeEnv.edgeServer[*].users[*].minDelayTolerance = 50           # ms
EdgeEnv.edgeServer[*].users[*].maxDelayTolerance = 100          # ms
EdgeEnv.edgeServer[*].users[*].minSubTaskCount = 1
EdgeEnv.edgeServer[*].users[*].maxSubTaskCount = 4

EdgeEnv.edgeServer[*].taskQueue.minFrequency = 5         # GHz
EdgeEnv.edgeServer[*].taskQueue.maxFrequency = 10        # GHz
EdgeEnv.edgeServer[*].taskQueue.memoryMultiple = 10
EdgeEnv.edgeServer[*].taskQueue.schedulingAlgo = ${schedulingAlgo= "FIFO", "FIFO", "Proposed" ! dispatchingAlgo}

EdgeEnv.edgeServer[*].taskQueue.statusUpadteInterval = 1  # ms
EdgeEnv.edgeServer[*].infoHandler.maxHop = 0
EdgeEnv.edgeServer[*].taskQueue.dispatchingAlgo = ${dispatchingAlgo= "Random", "Greedy", "Proposed"} # ${dispatchingAlgo= "Random", "Greedy", "Proposed"}
#debug-on-errors = true
#record-eventlog = true

